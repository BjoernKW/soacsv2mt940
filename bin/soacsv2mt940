#!/usr/bin/env ruby

require_relative '../lib/soacsv2mt940.rb'

# ...
module SOACSV2MT940
  def self.setup
    options = { csv_file: nil, mt940_file: nil, nbr: nil, balance: nil }
    optional_text = ''

    parser = OptionParser.new do |opts|
      opts.banner = "\nUsage: soacsvmt940 -c, --csv <file> " \
                    '[-m, --mt940 <file>] ' \
                    '[-n, --nbr <number>] ' \
                    "[-b, --balance <amount>]\n\n" \
                    'Example: soacsvmt940 -c bank.csv ' \
                    '--mt940 bank.txt -n 0 ' \
                    "--balance -1523,89\n\nOptions:"

      opts.on('-c', '--csv <filename>', 'Name of .csv input file.') do |csv|
        options[:csv_file] = csv
      end

      optional_text = 'Optional: name of .mt940 target file; ' \
                      'if not specified, the ending .mt940 will be used.'
      opts.on('-m', '--mt940 <filename>', optional_text) do |mt940|
        options[:mt940_file] = mt940
      end

      optional_text = 'Optional: number of the statement of account; ' \
                      'if ommited, 0 will be used.'
      opts.on('-n', '--nbr <number>', optional_text) do |nbr|
        options[:nbr] = nbr
      end

      optional_text = 'Optional: opening balance; ' \
                      '0 will be used if not specified.'
      opts.on('-b', '--balance <amount>', optional_text) do |balance|
        options[:balance] = balance
      end

      opts.on('-h', '--help', "Displays this help.\n\n") do
        puts opts
        exit
      end
    end

    parser.parse!

    unless options[:csv_file]
      LOGGER.error('Name of .csv file is needed!')
      abort('ABORTED!')
    end

    unless options[:mt940_file]
      options[:mt940_file] = options[:csv_file].gsub(/CSV|csv/, 'mt940')
    end

    options[:nbr] = 0 unless options[:nbr]

    options[:balance] = if options[:balance]
                          options[:balance].tr(',', '.')
                        else
                          0.0
                        end

    soacsv_data = SOACSV.new(options[:csv_file]).get
    soamt940 = SOAMT940.new(soacsv_data, options[:mt940_file], options[:nbr], options[:balance])
    soamt940.csv2mt940
  end

  setup
end
