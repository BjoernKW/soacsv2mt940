#!/usr/bin/env ruby
# encoding: UTF-8

require_relative '../lib/soacsv2mt940.rb'

# Namespace SOACSV2MT940 -- wraps everything together
# NAME: soacsv2mt940 -- convert bank Statement Of Account from .CSV format to MT940 format
#
# SYNOPSIS: soacsv2mt940 -c, --csv <file> [-m, --mt940 <file>] [-n, --nbr <number>] [-b, --balance <amount>]
#
# EXAMPLE: soacsvmt940 -c bank.csv -m bank.txt --nbr 0 -b -1523,89
module SOACSV2MT940
  def self.setup
    options = { csv_file: nil, mt940_file: nil, nbr: nil, balance: nil }

    parser = OptionParser.new do |opts|
      opts.banner = "\nUsage: soacsvmt940 -c, --csv <file> \
                                          [-m, --mt940 <file>] \
                                          [-n, --nbr <number>] \
                                          [-b, --balance <amount>]\n\n"
      opts.banner << "Example: soacsvmt940 -c bank.csv \
                                           --mt940 bank.txt \
                                           -n 0 \
                                           --balance \
                                           -1523,89\n\nOptions:"

      opts.on('-c', '--csv <filename>', 'Name of .csv input file.') do |csv|
        options[:csv_file] = csv
      end

      opts.on('-m', '--mt940 <filename>', 'Optional: name of .mt940 target file; \
        if not specified, the ending .mt940 will be used.') do |mt940|
        options[:mt940_file] = mt940
      end

      opts.on('-n', '--nbr <number>', 'Optional: number of the statement of account; \
        if ommited, 0 will be used.') do |nbr|
        options[:nbr] = nbr
      end

      opts.on('-b', '--balance <amount>', 'Optional: opening balance; \
        0 will be used if not specified.') do |balance|
        options[:balance] = balance
      end

      opts.on('-h', '--help', "Displays this help.\n\n") do
        puts opts
        exit
      end
    end

    parser.parse!

    unless options[:csv_file]
      LOGGER.error('Name of .csv file is needed!')
      abort('ABORTED!')
    end

    unless options[:mt940_file]
      options[:mt940_file] = options[:csv_file].gsub(/CSV|csv/, 'mt940')
    end

    options[:nbr] = 0 unless options[:nbr]

    if options[:balance]
      options[:balance] = options[:balance].tr(',', '.')
    else
      options[:balance] = 0.0
    end

    soacsv = SOACSV.new(options[:csv_file])
    soamt940 = SOAMT940.new(soacsv.file_read, options[:mt940_file], options[:nbr], options[:balance])
    soamt940.csv2mt940
  end

  setup
end
